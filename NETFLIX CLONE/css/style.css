:root{
    --primary-color: #e50914;
    --dark-color: #141414;
}


/* star means "for everything" */
* { 
    /* this is the reset */
    box-sizing : border-box;
    /* by using border box, the padding wont effect the width etc */
    margin: 0;
    padding: 0;
    /* also taking off margin and padding for everything if we reset */
}

body{
    font-family: 'Arial', sans-serif;
    -webkit-font-smoothing: antialiased;
    background: #000;
    color: #999;
}

ul{
    list-style: none;
}

h1, h2, h3, h4{
    color: #fff;
}

a{
    color: #fff;
    text-decoration: none;
}


p{
    margin: 0.5rem
}

img{
    width: 100%;
}

.showcase{
    width: 100%;
    height:93vh; 
    /* viewport height = vh */

    position: relative;
    background:url('../images/background-netflix-5.jpg') no-repeat center center/cover;
}

.showcase::after{
    content: '';
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    z-index: 1;
    /* z index is like layers from photoshop. higher values means higher position */
    background : rgba(0,0,0,0.6);
    box-shadow: inset 120px 100px 250px #000000, inset -120px -100px 250px #000000; 

}

.showcase-top{
    position : relative;
    z-index: 2;
    height: 90px;
}

.showcase-top img{
    width: 170px;
    position: absolute;
    /* means position it inside of its closest parent element that has the  position 'relative' ie, showcase-top  */
    top: 50%;
    left: 50%;
    transform : translate(-50%);
    /* so that we make up for the actual height and width of the image. 
    the image was more further right than we wanted, this fixes it*/
}

.showcase-top a{
    position: absolute;
    top:50%;
    right:0;
    transform: translate(-50%);
}

.showcase-content{
    position: relative;
    z-index: 2;
    margin: auto;
    display: flex;
    flex-direction: column;
    /* setting direction to row would put everything in one row which we dont want */
    justify-content: center;
    align-items: center;
    text-align: center;
    margin-top: 9rem;

}

.showcase-content h1{
    font-weight: 700;
    font-size: 5.2rem;
    line-height:1.1;
    margin: 0 0 2rem;
}

.showcase-content p{
    text-transform: uppercase;
    color: #fff;
    font-weight: 400;
    font-size: 1.9rem;
    line-height:1.25;
    margin: 0 0 2rem;
}

/* TABS */

.tabs{
    background : var(--dark-color);
    padding-top: 2rem;
    border-bottom: 3px solid #3d3d3d;
    }

.tabs .container {
    display:grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1rem;
    align-items: center;
    justify-content: center;
    text-align: center;
}

.tabs p{
    font-size: 1.2rem;
    padding-top: 0.5rem;
}

.tabs .container >div {
    /* this is how you target each div */
    padding: 1.5 rem 0;
    /* 1.5 rem up and down, 0 left and right */
}
.tabs .container >div:hover {
    color: #fff;
    cursor: pointer;

}

.tab-border{
    border-bottom: var(--primary-color) 4px solid;
}

/* TAB content */

.tab-content {
    padding: 3rem 0; 
    /* 3 top bottom 0 left right */
    background: #000;
    color: #fff;
    /* now you dont need to mention white text specifically. */
}

/* hiding contents initally */

#tab-1-content,
#tab-2-content,
#tab-3-content {
    display: none;
}

.show{
    display: block !important; 
    /* important means that this task takes precedence, and always works */
}

#tab-1-content .tab-1-content-inner{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    /* we want two even columns, repeat twice, 1 fraction ^^  */

    grid-gap: 2rem;
    align-items: center;
    justify-items: center;
}

#tab-2-content .tab-2-content-top{
    display:grid;
    grid-template-columns: 2fr 1fr;
    /* 2fr for the text and 1fr for where the button is  */
    grid-gap: 1rem;
    justify-content: center;
    align-items: center;

}

#tab-2-content .tab-2-content-bottom{
    margin-top: 2rem;
    /* to move it down a little ^^ */


    display:grid;
    grid-template-columns: repeat(3, 1fr);
    /* 2fr for the text and 1fr for where the button is  */
    grid-gap: 2rem;
    justify-content: center;
    align-items: center;
    text-align: center;

}


.text-xl{
    font-size : 2rem;
    margin-bottom : 1rem;
    /* color: #fff; */
}

.text-md{
    font-size : 1.5rem;
    margin-bottom : 1rem;
    /* color: #fff; */
}


.text-lg{
    font-size : 1.8rem;
    margin-bottom : 1rem;
    /* color: #fff; */

}


.text-center{
    text-align : center;
    /* color: #fff; */


}

.text-dark{
    color: #999;
    
}



/* TABLE */
.table{
    width : 100%;
    margin-top: 2rem;
    /* padding: 0 1rem 0 1rem; */

    /* BORDER COLLAPSE TO REMOVE THOSE BLACKLINES THAT OCCURED */
    border-collapse: collapse;
    /* what does ^^^ do? */
    border-spacing: 0;
}

.table thead th{
    text-transform: uppercase;
    padding: 0.8rem;
    /* text-align: left; */

}

.table tbody tr td{
    color : #999;
    padding: 0.8rem 1.2rem;
    text-align: center;
}

.table tbody tr td:first-child{
    /* WE WANTED THE DESCRIPTION TO NOT BE CENTERED, HENCE WE USED A PSEUDO CLASS AND SELECTED FIRST CHILD */
    text-align: left;
}

/* FOR ALTERNATING HIGHLIGHTING ---  */
.table tbody tr:nth-child(odd){
    background: #222;
    /* using this we get some black lines, that seem to separate individual cells of the table, so to remove that, we use border collapse ^^^ */
}

/* FOOTER */
.footer {
    max-width: 75%;
    margin: 1rem auto;
    overflow: auto;
    /* what does this do^^ */
}

.footer, .footer a{
    color: #999;
    font-size:0.9rem;
}

.footer p{
    margin-bottom: 1.5rem;
}

.footer .footer-cols{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 2rem;
}

footer li{
    line-height: 1.9;
}
/* UTILITY CLASSES */



/* container */
.container{
    max-width:70%;
    /* 70 % of the screen */
    margin:auto;
    overflow: hidden;
    /* everything will remain in the box */
    padding: 0 2rem;
    /* 0 top and bottom, 2 left and right */
}

/* buttons */

.btn {
    display: inline-block; 
    background: var(--primary-color);
    color: #fff;
    padding:0.4rem 1.3rem;
    font-size: 1rem;
    text-align: center;
    border: none;
    cursor:pointer; 
    /* what does pointer mean?
   " we might use this button class on a forum maybe(?) "*/
   margin-right : 0.5rem;
   outline: none;
   box-shadow: 0 1px 0 rgba(0,0,0,0.45);
   border-radius: 2px;

}

.btn:hover {
    opacity:0.9;
}

.btn-rounded{
    border-radius : 5px;
}

.btn-xl{
    font-size:2rem;
    padding: 0.8rem 1.3rem;
    text-transform : uppercase;
}

.btn-lg{
    font-size:1.5rem;
    padding: 0.8rem 1.3rem;
    text-transform : uppercase;
}

.btn-icon{
    margin-left: 1rem;
}

@media(max-width: 960px){
    .showcase{
        height:70vh;
        /* if window is less than 960p, than showcase should become 70% of viewport height */
    }

    .hide-sm{
        display: none;
    }

    .showase-top img{
        top:30%;
        left: 5%;
        transform: translate(0);
    }

    .showcase-content h1{
        font-size: 3.7rem;
        line-height: 1;
    }

    .showcase-content p{
        font-size: 1.5rem;
    }

    .footer .footer-cols{
        grid-template-columns: repeat(2, 1fr);
        /* 2 cols but in two rows */
    }

    .btn-xl{
        font-size: 1.5rem;
        padding: 1.4rem 2rem;
    }

    .text-xl{
        font-size: 1.5rem;
    }

    .text-lg{
        font-size:1.3rem;
    }

    .text-md{
        font-size: 1.5rem;
    }


}

@media(max-width : 700px){
    #tab-1-content .tab-1-content-inner{
        /* we want to stack things up when the windows gets too small */
        grid-template-columns: 1fr;
        text-align: center;
    }

    #tab-2-content .tab-2-content-top{
        display: block;
        text-align: center;
    }

    #tab-2-content .tab-2-content-top{

        grid-template-columns: 1fr;

    }

    #showcase::after {
        background: #000;
        box-shadow: inset 80px 80px 250px #000000, inset -80px -80px 250px #0000008
    }
}